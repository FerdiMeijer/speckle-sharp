<UserControl
  x:Class="DesktopUI2.Views.Pages.NewOrOpenFileView"
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
  xmlns:conv="clr-namespace:DesktopUI2.Views.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
  xmlns:m="clr-namespace:Material.Styles;assembly=Material.Styles"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:vm="clr-namespace:DesktopUI2.ViewModels.DesignViewModels"
  d:DesignHeight="550"
  d:DesignWidth="400"
  Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
  mc:Ignorable="d">

  <Design.DataContext>
    <vm:DesignSavedStreamViewModel />
    <!--<vm:DesignHomeViewModel />-->
  </Design.DataContext>
  
  <UserControl.Resources>
    <conv:RoleValueConverter x:Key="RoleValueConverter" />
    <conv:RoleCanSendValueConverter x:Key="RoleCanSendValueConverter" />
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="MenuItem.Profile">
      <Setter Property="Header">
        <Setter.Value>
          <Template>
            <Grid RowDefinitions="auto,auto">
              <TextBlock Text="{Binding FullAccountName}" />
              <TextBlock
                Grid.Row="1"
                Classes="Overline"
                Text="{Binding FullServerName}" />
            </Grid>
          </Template>
        </Setter.Value>

      </Setter>
      <Setter Property="Icon">
        <Setter.Value>
          <Template>
            <Image
              Width="20"
              Height="20"
              Source="{Binding AvatarImage}">

              <Image.Clip>
                <EllipseGeometry Rect="0,0,20,20" />
              </Image.Clip>
            </Image>
          </Template>
        </Setter.Value>
      </Setter>

    </Style>
  </UserControl.Styles>

  <Grid RowDefinitions="auto, *">
    <m:Card Padding="10,7" CornerRadius="0">
      <Grid ColumnDefinitions="auto,*">
        <StackPanel
          VerticalAlignment="Bottom"
          Orientation="Horizontal"
          Spacing="6">
          <TextBlock
            FontFamily="../../Assets/SpaceGrotesk-VariableFont_wght.ttf"
            FontSize="18"
            FontWeight="Bold"
            Foreground="{DynamicResource PrimaryHueMidBrush}"
            Text="SPECKLE" />
          <TextBlock
            FontFamily="../../Assets/SpaceGrotesk-VariableFont_wght.ttf"
            FontSize="18"
            FontWeight="Medium"
            Text="{Binding Title}" />

          <TextBlock
            Margin="0,0,0,4"
            VerticalAlignment="Bottom"
            FontSize="8"
            Foreground="Gray"
            Text="{Binding Version}" />
        </StackPanel>

        <StackPanel
          Grid.Column="1"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          Orientation="Horizontal"
          Spacing="6">
          <m:FloatingButton
            Grid.Column="1"
            VerticalAlignment="Center"
            assists:ShadowAssist.ShadowDepth="Depth0"
            Background="Transparent"
            Classes="Mini"
            Command="{Binding ToggleDarkThemeCommand}"
            ToolTip.Tip="Toggle dark theme">
            <Button.Content>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                assists:ShadowAssist.ShadowDepth="0"
                Foreground="{DynamicResource MaterialDesignBody}"
                Kind="SunMoonStars" />

            </Button.Content>
          </m:FloatingButton>
          <m:FloatingButton
            Grid.Column="1"
            VerticalAlignment="Center"
            assists:ShadowAssist.ShadowDepth="Depth0"
            Background="Transparent"
            Classes="Mini"
            Command="{Binding RefreshCommand}"
            ToolTip.Tip="Refresh">
            <Button.Content>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                assists:ShadowAssist.ShadowDepth="0"
                Foreground="{DynamicResource MaterialDesignBody}"
                Kind="Refresh" />
            </Button.Content>
          </m:FloatingButton>

          <!--  ACCOUNT MENU  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasOneAccount}"
            ToolTip.Tip="Account">
            <MenuItem Padding="0">
              <MenuItem.Header>
                <Image
                  Width="28"
                  Height="28"
                  Source="{Binding Accounts[0].AvatarImage}">

                  <Image.Clip>
                    <EllipseGeometry Rect="0,0,28,28" />
                  </Image.Clip>
                </Image>
              </MenuItem.Header>
              <!--<MenuItem
                Classes="Profile"
                Command="{Binding $parent[local:HomeView].DataContext.OpenProfileCommand}"
                CommandParameter="{Binding Account}"
                DataContext="{Binding Accounts[0]}" />-->
              <Separator />
              <!--<MenuItem
                Command="{Binding AddAccountCommand}"
                Header="Add another account"
                Icon="{icons:MaterialIconExt AccountPlus}" />-->
              <MenuItem
                Command="{Binding LaunchManagerCommand}"
                Header="Manage accounts in Manager"
                Icon="{icons:MaterialIconExt AccountCog}" />
              <MenuItem
                Command="{Binding RemoveAccountCommand}"
                CommandParameter="{Binding Accounts[0].Account}"
                Header="Log Out"
                Icon="{icons:MaterialIconExt Logout}" />
            </MenuItem>
          </Menu>

          <!--  MULTIPLE ACCOUNTS MENU  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasMultipleAccounts}"
            ToolTip.Tip="Accounts">
            <MenuItem
              Width="30"
              Height="30"
              Header="{icons:MaterialIconExt AccountMultiple}">

              <MenuItem
                Header="Accounts"
                Icon="{icons:MaterialIconExt AccountMultiple}"
                Items="{Binding Accounts}">
                <MenuItem.DataTemplates>
                  <DataTemplate>
                    <MenuItem Classes="Profile">
                      <!--<MenuItem
                        Command="{Binding $parent[local:HomeView].DataContext.OpenProfileCommand}"
                        CommandParameter="{Binding Account}"
                        Header="View online"
                        Icon="{icons:MaterialIconExt ExternalLink}" />
                      <MenuItem
                        Command="{Binding $parent[local:HomeView].DataContext.RemoveAccountCommand}"
                        CommandParameter="{Binding Account}"
                        Header="Remove account"
                        Icon="{icons:MaterialIconExt AccountMinus}" />-->
                    </MenuItem>
                  </DataTemplate>

                </MenuItem.DataTemplates>
              </MenuItem>
              <!--<MenuItem
                Command="{Binding $parent[local:HomeView].DataContext.AddAccountCommand}"
                Header="Add another account"
                Icon="{icons:MaterialIconExt AccountPlus}" />-->
              <!--<MenuItem
                Command="{Binding $parent[local:HomeView].DataContext.LaunchManagerCommand}"
                Header="Manage accounts in Manager"
                Icon="{icons:MaterialIconExt AccountCog}" />-->

            </MenuItem>
          </Menu>

          <!--  UPDATE NOTIFICATION  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasUpdate}"
            ToolTip.Tip="Update available">
            <MenuItem
              Width="30"
              Height="30"
              Foreground="Red"
              Header="{icons:MaterialIconExt Notifications}">
              <MenuItem
                Command="{Binding LaunchManagerCommand}"
                Header="An update for this connector is available, install it now!"
                Icon="{icons:MaterialIconExt ExternalLink}" />
            </MenuItem>
          </Menu>
        </StackPanel>
      </Grid>
    </m:Card>
    <Grid
      Grid.Row="1"
      Margin="15"
      IsVisible="{Binding HasAccounts}"
      RowDefinitions="auto,auto, auto,auto, *">

      <!--  CREATE/ADD STREAMS  -->
      <Grid
        Grid.Row="1"
        Margin="0,15,0,0"
        ColumnDefinitions="*,*">
        <Button
          Margin="0,0,7,0"
          Classes="Flat"
          Command="{Binding NewStreamCommand}">
          <Grid Margin="0" ColumnDefinitions="auto,*">
            <icons:MaterialIcon VerticalAlignment="Center" Kind="Plus" />
            <TextBlock
              Grid.Column="1"
              Margin="8,0"
              Padding="0"
              VerticalAlignment="Center"
              Text="Create new Stream"
              TextTrimming="CharacterEllipsis" />
          </Grid>
        </Button>
        <Button
          Grid.Column="1"
          Margin="7,0,0,0"
          Classes="Flat"
          Command="{Binding AddFromUrlCommand}">
          <Grid ColumnDefinitions="auto,*">
            <icons:MaterialIcon VerticalAlignment="Center" Kind="Link" />
            <TextBlock
              Grid.Column="1"
              Margin="8,0"
              VerticalAlignment="Center"
              Text="Add by ID or URL"
              TextTrimming="CharacterEllipsis" />
          </Grid>
        </Button>
      </Grid>
      <Grid
        Grid.Row="2"
        Margin="0,10,0,0"
        IsVisible="{Binding InProgress}">
        <ProgressBar IsIndeterminate="True" />
      </Grid>
    </Grid>
    <Grid
      Grid.Row="1"
      Margin="15"
      IsVisible="{Binding HasAccounts, Converter={x:Static BoolConverters.Not}, FallbackValue=True}">
      <m:Card
        Margin="10"
        Padding="30"
        VerticalAlignment="Top">
        <StackPanel Orientation="Vertical">


          <TextBlock TextAlignment="Center">
            👋 Hello and welcome!&#10;&#10;Please log in to use this connector:
          </TextBlock>
          <Button
            Margin="15,40,15,15"
            Command="{Binding LaunchManagerCommand}"
            Content="Log In using Manager"
            IsEnabled="{Binding IsLoggingIn, Converter={x:Static BoolConverters.Not}, FallbackValue=False}"
            ToolTip.Tip="Manager is the reccomended way to log in and install Connectors" />
          <TextBlock TextAlignment="Center">
            or
          </TextBlock>
          <Button
            Margin="15"
            Command="{Binding AddAccountCommand}"
            Content="Log In directly"
            IsVisible="{Binding IsLoggingIn, Converter={x:Static BoolConverters.Not}, FallbackValue=False}"
            ToolTip.Tip="Direct log in is currently only supported on our XYZ server" />
          <StackPanel IsVisible="{Binding IsLoggingIn, FallbackValue=False}" Orientation="Vertical">
            <TextBlock Margin="15" TextAlignment="Center">
              ☝ Please follow the instructions in your browser.
            </TextBlock>
            <ProgressBar Classes="Circle" IsIndeterminate="True" />
          </StackPanel>

        </StackPanel>

      </m:Card>

    </Grid>
  </Grid>
  
</UserControl>